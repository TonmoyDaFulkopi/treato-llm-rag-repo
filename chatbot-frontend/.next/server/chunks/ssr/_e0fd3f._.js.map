{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/djangoML/chatbot-frontend/src/app/chat/page.js"],"sourcesContent":["\"use client\"; // Ensures client-side rendering\nimport { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\"; // For animations\nimport { PaperAirplaneIcon } from \"@heroicons/react/24/solid\";\n\n\nexport default function ChatPage() {\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const chatContainerRef = useRef(null);\n\n  // Scroll to the bottom when messages are updated\n  useEffect(() => {\n    chatContainerRef.current?.scrollTo({\n      top: chatContainerRef.current.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [chatHistory]);\n\n  const sendMessage = async () => {\n    if (!userMessage) return;\n\n    const newMessage = { role: \"user\", content: userMessage };\n    setChatHistory((prev) => [...prev, newMessage]);\n    setUserMessage(\"\");\n\n    setIsTyping(true); // Show typing indicator\n\n    try {\n      const res = await fetch(\n        `http://127.0.0.1:8000/chat/?message=${encodeURIComponent(userMessage)}`\n      );\n      const data = await res.json();\n\n      const botMessage = { role: \"bot\", content: data.response };\n      setChatHistory((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n      setChatHistory((prev) => [\n        ...prev,\n        { role: \"bot\", content: \"Error: Could not fetch response.\" },\n      ]);\n    } finally {\n      setIsTyping(false); // Remove typing indicator\n    }\n  };\n\n  return (\n    <div className={`${darkMode ? \"dark\" : \"\"} h-screen flex flex-col bg-gray-100 dark:bg-gray-900`}>\n      {/* Header */}\n      <header className=\"bg-blue-600 text-white p-4 text-center text-lg font-semibold\">\n        üí¨ Chatbot Interface\n        <button\n          onClick={() => setDarkMode(!darkMode)}\n          className=\"absolute top-4 right-4 text-gray-300 hover:text-white\"\n        >\n          {darkMode ? \"‚òÄÔ∏è Light Mode\" : \"üåô Dark Mode\"}\n        </button>\n      </header>\n\n      {/* Chat History */}\n      <div\n        ref={chatContainerRef}\n        className=\"flex-grow overflow-y-auto p-4 space-y-4\"\n        style={{ maxHeight: \"75vh\" }}\n      >\n        {chatHistory.map((msg, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className={`p-3 rounded-xl max-w-xs shadow-md ${msg.role === \"user\"\n              ? \"ml-auto bg-blue-500 text-white\"\n              : \"mr-auto bg-gray-200 text-gray-800\"\n              }`}\n          >\n            <p>{msg.content}</p>\n            <span className=\"block text-right text-xs text-gray-400 mt-1\">\n              {new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n            </span>\n          </motion.div>\n        ))}\n\n        {/* Typing Indicator */}\n        {isTyping && (\n          <div className=\"mr-auto text-gray-400 italic animate-pulse\">Bot is typing...</div>\n        )}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"flex p-4 bg-white border-t border-gray-300 dark:bg-gray-800\">\n        <input\n          type=\"text\"\n          value={userMessage}\n          onChange={(e) => setUserMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n          className=\"flex-grow p-2 border border-gray-300 rounded-l-lg focus:outline-none dark:bg-gray-700 dark:text-white\"\n        />\n        <button\n          onClick={sendMessage}\n          className=\"bg-blue-600 text-white px-4 rounded-r-lg hover:bg-blue-700 flex items-center\"\n        >\n          <PaperAirplaneIcon className=\"h-5 w-5 mr-1\" />\n          Send\n        </button>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-100 text-center p-2 text-sm text-gray-500 dark:bg-gray-800 dark:text-gray-300\">\n        Powered by Django & Next.js | Made with ‚ù§Ô∏è\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;;;;;;;;AADA,cAAc,gCAAgC;;;;;AAM/B,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEhC,iDAAiD;IACjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,iBAAiB,OAAO,EAAE,SAAS;YACjC,KAAK,iBAAiB,OAAO,CAAC,YAAY;YAC1C,UAAU;QACZ;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,cAAc;QAClB,IAAI,CAAC,aAAa;QAElB,MAAM,aAAa;YAAE,MAAM;YAAQ,SAAS;QAAY;QACxD,eAAe,CAAC,OAAS;mBAAI;gBAAM;aAAW;QAC9C,eAAe;QAEf,YAAY,OAAO,wBAAwB;QAE3C,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,CAAC,oCAAoC,EAAE,mBAAmB,cAAc;YAE1E,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,MAAM,aAAa;gBAAE,MAAM;gBAAO,SAAS,KAAK,QAAQ;YAAC;YACzD,eAAe,CAAC,OAAS;uBAAI;oBAAM;iBAAW;QAChD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,eAAe,CAAC,OAAS;uBACpB;oBACH;wBAAE,MAAM;wBAAO,SAAS;oBAAmC;iBAC5D;QACH,SAAU;YACR,YAAY,QAAQ,0BAA0B;QAChD;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,GAAG,WAAW,SAAS,GAAG,oDAAoD,CAAC;;0BAE7F,8OAAC;gBAAO,WAAU;;oBAA+D;kCAE/E,8OAAC;wBACC,SAAS,IAAM,YAAY,CAAC;wBAC5B,WAAU;kCAET,WAAW,kBAAkB;;;;;;;;;;;;0BAKlC,8OAAC;gBACC,KAAK;gBACL,WAAU;gBACV,OAAO;oBAAE,WAAW;gBAAO;;oBAE1B,YAAY,GAAG,CAAC,CAAC,KAAK,sBACrB,8OAAC,OAAO,GAAG;4BAET,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAG;4BAC7B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAW,CAAC,kCAAkC,EAAE,IAAI,IAAI,KAAK,SACzD,mCACA,qCACA;;8CAEJ,8OAAC;8CAAG,IAAI,OAAO;;;;;;8CACf,8OAAC;oCAAK,WAAU;8CACb,IAAI,OAAO,kBAAkB,CAAC,EAAE,EAAE;wCAAE,MAAM;wCAAW,QAAQ;oCAAU;;;;;;;2BAXrE;;;;;oBAiBR,0BACC,8OAAC;wBAAI,WAAU;kCAA6C;;;;;;;;;;;;0BAKhE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,aAAY;wBACZ,WAAU;;;;;;kCAEZ,8OAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,8OAAC;gCAAkB,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;0BAMlD,8OAAC;gBAAO,WAAU;0BAAwF;;;;;;;;;;;;AAKhH"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file://D%3A/djangoML/chatbot-frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}